{"version":3,"sources":["webpack:///./node_modules/core-js/internals/engine-is-ie-or-edge.js","webpack:///./node_modules/core-js/internals/classof.js","webpack:///./node_modules/core-js/internals/to-string-tag-support.js","webpack:///./node_modules/core-js/internals/engine-ff-version.js","webpack:///./node_modules/core-js/internals/array-slice-simple.js","webpack:///./node_modules/core-js/modules/es.array.sort.js","webpack:///./node_modules/core-js/internals/engine-webkit-version.js","webpack:///./node_modules/core-js/internals/to-string.js","webpack:///./node_modules/intersection-observer/intersection-observer.js","webpack:///./node_modules/core-js/internals/create-property.js","webpack:///./node_modules/core-js/internals/array-sort.js"],"names":["UA","module","exports","test","global","TO_STRING_TAG_SUPPORT","isCallable","classofRaw","TO_STRING_TAG","wellKnownSymbol","Object","CORRECT_ARGUMENTS","arguments","it","O","tag","result","undefined","key","error","tryGet","callee","String","firefox","match","toAbsoluteIndex","lengthOfArrayLike","createProperty","Array","max","Math","start","end","length","k","fin","n","$","uncurryThis","aCallable","toObject","toString","fails","internalSort","arrayMethodIsStrict","FF","IE_OR_EDGE","V8","WEBKIT","un$Sort","sort","push","FAILS_ON_UNDEFINED","FAILS_ON_NULL","STRICT_METHOD","STABLE_SORT","code","chr","value","index","fromCharCode","v","a","b","charAt","target","proto","forced","comparefn","array","this","itemsLength","items","arrayLength","x","y","getSortCompare","webkit","classof","argument","TypeError","window","IntersectionObserverEntry","prototype","defineProperty","get","intersectionRatio","document","registry","IntersectionObserver","THROTTLE_TIMEOUT","POLL_INTERVAL","USE_MUTATION_OBSERVER","observe","_observationTargets","some","item","element","nodeType","Error","_registerInstance","entry","_monitorIntersections","_checkForIntersections","unobserve","filter","_unmonitorIntersections","_unregisterInstance","disconnect","takeRecords","records","_queuedEntries","slice","_initThresholds","opt_threshold","threshold","isArray","t","i","isNaN","_parseRootMargin","opt_rootMargin","margins","split","map","margin","parts","exec","parseFloat","unit","_monitoringIntersections","_monitoringInterval","setInterval","addEvent","_domObserver","MutationObserver","attributes","childList","characterData","subtree","clearInterval","removeEvent","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","top","bottom","left","right","width","height","forEach","targetRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","intersectionRect","_computeTargetAndRootIntersection","newEntry","time","performance","now","boundingClientRect","rootBounds","_hasCrossedThreshold","isIntersecting","_callback","getComputedStyle","display","rect1","rect2","parent","getParentNode","atRoot","parentRect","parentComputedStyle","root","body","documentElement","overflow","min","html","clientWidth","clientHeight","_expandRectByRootMargin","rect","_rootMarginValues","newRect","oldRatio","newRatio","thresholds","containsDeep","indexOf","splice","targetArea","intersectionArea","Number","toFixed","callback","opt_options","fn","timeout","timer","options","bind","setTimeout","rootMargin","join","node","event","opt_useCapture","addEventListener","attachEvent","removeEventListener","detatchEvent","el","err","child","parentNode","host","assignedSlot","toPropertyKey","definePropertyModule","createPropertyDescriptor","object","propertyKey","f","arraySlice","floor","mergeSort","middle","insertionSort","merge","j","llength","rlength","lindex","rindex"],"mappings":"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","file":"10-774f6f0bb552b2fda421.js","sourcesContent":["var UA = require('../internals/engine-user-agent');\n\nmodule.exports = /MSIE|Trident/.test(UA);\n","var global = require('../internals/global');\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar Object = global.Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","var userAgent = require('../internals/engine-user-agent');\n\nvar firefox = userAgent.match(/firefox\\/(\\d+)/i);\n\nmodule.exports = !!firefox && +firefox[1];\n","var global = require('../internals/global');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar createProperty = require('../internals/create-property');\n\nvar Array = global.Array;\nvar max = Math.max;\n\nmodule.exports = function (O, start, end) {\n  var length = lengthOfArrayLike(O);\n  var k = toAbsoluteIndex(start, length);\n  var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n  var result = Array(max(fin - k, 0));\n  for (var n = 0; k < fin; k++, n++) createProperty(result, n, O[k]);\n  result.length = n;\n  return result;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar internalSort = require('../internals/array-sort');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar FF = require('../internals/engine-ff-version');\nvar IE_OR_EDGE = require('../internals/engine-is-ie-or-edge');\nvar V8 = require('../internals/engine-v8-version');\nvar WEBKIT = require('../internals/engine-webkit-version');\n\nvar test = [];\nvar un$Sort = uncurryThis(test.sort);\nvar push = uncurryThis(test.push);\n\n// IE8-\nvar FAILS_ON_UNDEFINED = fails(function () {\n  test.sort(undefined);\n});\n// V8 bug\nvar FAILS_ON_NULL = fails(function () {\n  test.sort(null);\n});\n// Old WebKit\nvar STRICT_METHOD = arrayMethodIsStrict('sort');\n\nvar STABLE_SORT = !fails(function () {\n  // feature detection can be too slow, so check engines versions\n  if (V8) return V8 < 70;\n  if (FF && FF > 3) return;\n  if (IE_OR_EDGE) return true;\n  if (WEBKIT) return WEBKIT < 603;\n\n  var result = '';\n  var code, chr, value, index;\n\n  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)\n  for (code = 65; code < 76; code++) {\n    chr = String.fromCharCode(code);\n\n    switch (code) {\n      case 66: case 69: case 70: case 72: value = 3; break;\n      case 68: case 71: value = 4; break;\n      default: value = 2;\n    }\n\n    for (index = 0; index < 47; index++) {\n      test.push({ k: chr + index, v: value });\n    }\n  }\n\n  test.sort(function (a, b) { return b.v - a.v; });\n\n  for (index = 0; index < test.length; index++) {\n    chr = test[index].k.charAt(0);\n    if (result.charAt(result.length - 1) !== chr) result += chr;\n  }\n\n  return result !== 'DGBEFHACIJK';\n});\n\nvar FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;\n\nvar getSortCompare = function (comparefn) {\n  return function (x, y) {\n    if (y === undefined) return -1;\n    if (x === undefined) return 1;\n    if (comparefn !== undefined) return +comparefn(x, y) || 0;\n    return toString(x) > toString(y) ? 1 : -1;\n  };\n};\n\n// `Array.prototype.sort` method\n// https://tc39.es/ecma262/#sec-array.prototype.sort\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  sort: function sort(comparefn) {\n    if (comparefn !== undefined) aCallable(comparefn);\n\n    var array = toObject(this);\n\n    if (STABLE_SORT) return comparefn === undefined ? un$Sort(array) : un$Sort(array, comparefn);\n\n    var items = [];\n    var arrayLength = lengthOfArrayLike(array);\n    var itemsLength, index;\n\n    for (index = 0; index < arrayLength; index++) {\n      if (index in array) push(items, array[index]);\n    }\n\n    internalSort(items, getSortCompare(comparefn));\n\n    itemsLength = items.length;\n    index = 0;\n\n    while (index < itemsLength) array[index] = items[index++];\n    while (index < arrayLength) delete array[index++];\n\n    return array;\n  }\n});\n","var userAgent = require('../internals/engine-user-agent');\n\nvar webkit = userAgent.match(/AppleWebKit\\/(\\d+)\\./);\n\nmodule.exports = !!webkit && +webkit[1];\n","var global = require('../internals/global');\nvar classof = require('../internals/classof');\n\nvar String = global.String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\n  return String(argument);\n};\n","require(\"core-js/modules/es.array.sort.js\");\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function () {\n  'use strict'; // Exit early if we're not running in a browser.\n\n  if (typeof window !== 'object') {\n    return;\n  } // Exit early if all IntersectionObserver and IntersectionObserverEntry\n  // features are natively supported.\n\n\n  if ('IntersectionObserver' in window && 'IntersectionObserverEntry' in window && 'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n    // Minimal polyfill for Edge 15's lack of `isIntersecting`\n    // See: https://github.com/w3c/IntersectionObserver/issues/211\n    if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n      Object.defineProperty(window.IntersectionObserverEntry.prototype, 'isIntersecting', {\n        get: function get() {\n          return this.intersectionRatio > 0;\n        }\n      });\n    }\n\n    return;\n  }\n  /**\n   * A local reference to the document.\n   */\n\n\n  var document = window.document;\n  /**\n   * An IntersectionObserver registry. This registry exists to hold a strong\n   * reference to IntersectionObserver instances currently observing a target\n   * element. Without this registry, instances without another reference may be\n   * garbage collected.\n   */\n\n  var registry = [];\n  /**\n   * Creates the global IntersectionObserverEntry constructor.\n   * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n   * @param {Object} entry A dictionary of instance properties.\n   * @constructor\n   */\n\n  function IntersectionObserverEntry(entry) {\n    this.time = entry.time;\n    this.target = entry.target;\n    this.rootBounds = entry.rootBounds;\n    this.boundingClientRect = entry.boundingClientRect;\n    this.intersectionRect = entry.intersectionRect || getEmptyRect();\n    this.isIntersecting = !!entry.intersectionRect; // Calculates the intersection ratio.\n\n    var targetRect = this.boundingClientRect;\n    var targetArea = targetRect.width * targetRect.height;\n    var intersectionRect = this.intersectionRect;\n    var intersectionArea = intersectionRect.width * intersectionRect.height; // Sets intersection ratio.\n\n    if (targetArea) {\n      // Round the intersection ratio to avoid floating point math issues:\n      // https://github.com/w3c/IntersectionObserver/issues/324\n      this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n    } else {\n      // If area is zero and is intersecting, sets to 1, otherwise to 0\n      this.intersectionRatio = this.isIntersecting ? 1 : 0;\n    }\n  }\n  /**\n   * Creates the global IntersectionObserver constructor.\n   * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n   * @param {Function} callback The function to be invoked after intersection\n   *     changes have queued. The function is not invoked if the queue has\n   *     been emptied by calling the `takeRecords` method.\n   * @param {Object=} opt_options Optional configuration options.\n   * @constructor\n   */\n\n\n  function IntersectionObserver(callback, opt_options) {\n    var options = opt_options || {};\n\n    if (typeof callback != 'function') {\n      throw new Error('callback must be a function');\n    }\n\n    if (options.root && options.root.nodeType != 1) {\n      throw new Error('root must be an Element');\n    } // Binds and throttles `this._checkForIntersections`.\n\n\n    this._checkForIntersections = throttle(this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT); // Private properties.\n\n    this._callback = callback;\n    this._observationTargets = [];\n    this._queuedEntries = [];\n    this._rootMarginValues = this._parseRootMargin(options.rootMargin); // Public properties.\n\n    this.thresholds = this._initThresholds(options.threshold);\n    this.root = options.root || null;\n    this.rootMargin = this._rootMarginValues.map(function (margin) {\n      return margin.value + margin.unit;\n    }).join(' ');\n  }\n  /**\n   * The minimum interval within which the document will be checked for\n   * intersection changes.\n   */\n\n\n  IntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n  /**\n   * The frequency in which the polyfill polls for intersection changes.\n   * this can be updated on a per instance basis and must be set prior to\n   * calling `observe` on the first target.\n   */\n\n  IntersectionObserver.prototype.POLL_INTERVAL = null;\n  /**\n   * Use a mutation observer on the root element\n   * to detect intersection changes.\n   */\n\n  IntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n  /**\n   * Starts observing a target element for intersection changes based on\n   * the thresholds values.\n   * @param {Element} target The DOM element to observe.\n   */\n\n  IntersectionObserver.prototype.observe = function (target) {\n    var isTargetAlreadyObserved = this._observationTargets.some(function (item) {\n      return item.element == target;\n    });\n\n    if (isTargetAlreadyObserved) {\n      return;\n    }\n\n    if (!(target && target.nodeType == 1)) {\n      throw new Error('target must be an Element');\n    }\n\n    this._registerInstance();\n\n    this._observationTargets.push({\n      element: target,\n      entry: null\n    });\n\n    this._monitorIntersections();\n\n    this._checkForIntersections();\n  };\n  /**\n   * Stops observing a target element for intersection changes.\n   * @param {Element} target The DOM element to observe.\n   */\n\n\n  IntersectionObserver.prototype.unobserve = function (target) {\n    this._observationTargets = this._observationTargets.filter(function (item) {\n      return item.element != target;\n    });\n\n    if (!this._observationTargets.length) {\n      this._unmonitorIntersections();\n\n      this._unregisterInstance();\n    }\n  };\n  /**\n   * Stops observing all target elements for intersection changes.\n   */\n\n\n  IntersectionObserver.prototype.disconnect = function () {\n    this._observationTargets = [];\n\n    this._unmonitorIntersections();\n\n    this._unregisterInstance();\n  };\n  /**\n   * Returns any queue entries that have not yet been reported to the\n   * callback and clears the queue. This can be used in conjunction with the\n   * callback to obtain the absolute most up-to-date intersection information.\n   * @return {Array} The currently queued entries.\n   */\n\n\n  IntersectionObserver.prototype.takeRecords = function () {\n    var records = this._queuedEntries.slice();\n\n    this._queuedEntries = [];\n    return records;\n  };\n  /**\n   * Accepts the threshold value from the user configuration object and\n   * returns a sorted array of unique threshold values. If a value is not\n   * between 0 and 1 and error is thrown.\n   * @private\n   * @param {Array|number=} opt_threshold An optional threshold value or\n   *     a list of threshold values, defaulting to [0].\n   * @return {Array} A sorted list of unique and valid threshold values.\n   */\n\n\n  IntersectionObserver.prototype._initThresholds = function (opt_threshold) {\n    var threshold = opt_threshold || [0];\n    if (!Array.isArray(threshold)) threshold = [threshold];\n    return threshold.sort().filter(function (t, i, a) {\n      if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n        throw new Error('threshold must be a number between 0 and 1 inclusively');\n      }\n\n      return t !== a[i - 1];\n    });\n  };\n  /**\n   * Accepts the rootMargin value from the user configuration object\n   * and returns an array of the four margin values as an object containing\n   * the value and unit properties. If any of the values are not properly\n   * formatted or use a unit other than px or %, and error is thrown.\n   * @private\n   * @param {string=} opt_rootMargin An optional rootMargin value,\n   *     defaulting to '0px'.\n   * @return {Array<Object>} An array of margin objects with the keys\n   *     value and unit.\n   */\n\n\n  IntersectionObserver.prototype._parseRootMargin = function (opt_rootMargin) {\n    var marginString = opt_rootMargin || '0px';\n    var margins = marginString.split(/\\s+/).map(function (margin) {\n      var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n\n      if (!parts) {\n        throw new Error('rootMargin must be specified in pixels or percent');\n      }\n\n      return {\n        value: parseFloat(parts[1]),\n        unit: parts[2]\n      };\n    }); // Handles shorthand.\n\n    margins[1] = margins[1] || margins[0];\n    margins[2] = margins[2] || margins[0];\n    margins[3] = margins[3] || margins[1];\n    return margins;\n  };\n  /**\n   * Starts polling for intersection changes if the polling is not already\n   * happening, and if the page's visibility state is visible.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._monitorIntersections = function () {\n    if (!this._monitoringIntersections) {\n      this._monitoringIntersections = true; // If a poll interval is set, use polling instead of listening to\n      // resize and scroll events or DOM mutations.\n\n      if (this.POLL_INTERVAL) {\n        this._monitoringInterval = setInterval(this._checkForIntersections, this.POLL_INTERVAL);\n      } else {\n        addEvent(window, 'resize', this._checkForIntersections, true);\n        addEvent(document, 'scroll', this._checkForIntersections, true);\n\n        if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in window) {\n          this._domObserver = new MutationObserver(this._checkForIntersections);\n\n          this._domObserver.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n          });\n        }\n      }\n    }\n  };\n  /**\n   * Stops polling for intersection changes.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._unmonitorIntersections = function () {\n    if (this._monitoringIntersections) {\n      this._monitoringIntersections = false;\n      clearInterval(this._monitoringInterval);\n      this._monitoringInterval = null;\n      removeEvent(window, 'resize', this._checkForIntersections, true);\n      removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this._domObserver) {\n        this._domObserver.disconnect();\n\n        this._domObserver = null;\n      }\n    }\n  };\n  /**\n   * Scans each observation target for intersection changes and adds them\n   * to the internal entries queue. If new entries are found, it\n   * schedules the callback to be invoked.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._checkForIntersections = function () {\n    var rootIsInDom = this._rootIsInDom();\n\n    var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n    this._observationTargets.forEach(function (item) {\n      var target = item.element;\n      var targetRect = getBoundingClientRect(target);\n\n      var rootContainsTarget = this._rootContainsTarget(target);\n\n      var oldEntry = item.entry;\n\n      var intersectionRect = rootIsInDom && rootContainsTarget && this._computeTargetAndRootIntersection(target, rootRect);\n\n      var newEntry = item.entry = new IntersectionObserverEntry({\n        time: now(),\n        target: target,\n        boundingClientRect: targetRect,\n        rootBounds: rootRect,\n        intersectionRect: intersectionRect\n      });\n\n      if (!oldEntry) {\n        this._queuedEntries.push(newEntry);\n      } else if (rootIsInDom && rootContainsTarget) {\n        // If the new entry intersection ratio has crossed any of the\n        // thresholds, add a new entry.\n        if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n          this._queuedEntries.push(newEntry);\n        }\n      } else {\n        // If the root is not in the DOM or target is not contained within\n        // root but the previous entry for this target had an intersection,\n        // add a new record indicating removal.\n        if (oldEntry && oldEntry.isIntersecting) {\n          this._queuedEntries.push(newEntry);\n        }\n      }\n    }, this);\n\n    if (this._queuedEntries.length) {\n      this._callback(this.takeRecords(), this);\n    }\n  };\n  /**\n   * Accepts a target and root rect computes the intersection between then\n   * following the algorithm in the spec.\n   * TODO(philipwalton): at this time clip-path is not considered.\n   * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n   * @param {Element} target The target DOM element\n   * @param {Object} rootRect The bounding rect of the root after being\n   *     expanded by the rootMargin value.\n   * @return {?Object} The final intersection rect object or undefined if no\n   *     intersection is found.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._computeTargetAndRootIntersection = function (target, rootRect) {\n    // If the element isn't displayed, an intersection can't happen.\n    if (window.getComputedStyle(target).display == 'none') return;\n    var targetRect = getBoundingClientRect(target);\n    var intersectionRect = targetRect;\n    var parent = getParentNode(target);\n    var atRoot = false;\n\n    while (!atRoot) {\n      var parentRect = null;\n      var parentComputedStyle = parent.nodeType == 1 ? window.getComputedStyle(parent) : {}; // If the parent isn't displayed, an intersection can't happen.\n\n      if (parentComputedStyle.display == 'none') return;\n\n      if (parent == this.root || parent == document) {\n        atRoot = true;\n        parentRect = rootRect;\n      } else {\n        // If the element has a non-visible overflow, and it's not the <body>\n        // or <html> element, update the intersection rect.\n        // Note: <body> and <html> cannot be clipped to a rect that's not also\n        // the document rect, so no need to compute a new intersection.\n        if (parent != document.body && parent != document.documentElement && parentComputedStyle.overflow != 'visible') {\n          parentRect = getBoundingClientRect(parent);\n        }\n      } // If either of the above conditionals set a new parentRect,\n      // calculate new intersection data.\n\n\n      if (parentRect) {\n        intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n        if (!intersectionRect) break;\n      }\n\n      parent = getParentNode(parent);\n    }\n\n    return intersectionRect;\n  };\n  /**\n   * Returns the root rect after being expanded by the rootMargin value.\n   * @return {Object} The expanded root rect.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._getRootRect = function () {\n    var rootRect;\n\n    if (this.root) {\n      rootRect = getBoundingClientRect(this.root);\n    } else {\n      // Use <html>/<body> instead of window since scroll bars affect size.\n      var html = document.documentElement;\n      var body = document.body;\n      rootRect = {\n        top: 0,\n        left: 0,\n        right: html.clientWidth || body.clientWidth,\n        width: html.clientWidth || body.clientWidth,\n        bottom: html.clientHeight || body.clientHeight,\n        height: html.clientHeight || body.clientHeight\n      };\n    }\n\n    return this._expandRectByRootMargin(rootRect);\n  };\n  /**\n   * Accepts a rect and expands it by the rootMargin value.\n   * @param {Object} rect The rect object to expand.\n   * @return {Object} The expanded rect.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._expandRectByRootMargin = function (rect) {\n    var margins = this._rootMarginValues.map(function (margin, i) {\n      return margin.unit == 'px' ? margin.value : margin.value * (i % 2 ? rect.width : rect.height) / 100;\n    });\n\n    var newRect = {\n      top: rect.top - margins[0],\n      right: rect.right + margins[1],\n      bottom: rect.bottom + margins[2],\n      left: rect.left - margins[3]\n    };\n    newRect.width = newRect.right - newRect.left;\n    newRect.height = newRect.bottom - newRect.top;\n    return newRect;\n  };\n  /**\n   * Accepts an old and new entry and returns true if at least one of the\n   * threshold values has been crossed.\n   * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n   *    particular target element or null if no previous entry exists.\n   * @param {IntersectionObserverEntry} newEntry The current entry for a\n   *    particular target element.\n   * @return {boolean} Returns true if a any threshold has been crossed.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._hasCrossedThreshold = function (oldEntry, newEntry) {\n    // To make comparing easier, an entry that has a ratio of 0\n    // but does not actually intersect is given a value of -1\n    var oldRatio = oldEntry && oldEntry.isIntersecting ? oldEntry.intersectionRatio || 0 : -1;\n    var newRatio = newEntry.isIntersecting ? newEntry.intersectionRatio || 0 : -1; // Ignore unchanged ratios\n\n    if (oldRatio === newRatio) return;\n\n    for (var i = 0; i < this.thresholds.length; i++) {\n      var threshold = this.thresholds[i]; // Return true if an entry matches a threshold or if the new ratio\n      // and the old ratio are on the opposite sides of a threshold.\n\n      if (threshold == oldRatio || threshold == newRatio || threshold < oldRatio !== threshold < newRatio) {\n        return true;\n      }\n    }\n  };\n  /**\n   * Returns whether or not the root element is an element and is in the DOM.\n   * @return {boolean} True if the root element is an element and is in the DOM.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._rootIsInDom = function () {\n    return !this.root || containsDeep(document, this.root);\n  };\n  /**\n   * Returns whether or not the target element is a child of root.\n   * @param {Element} target The target element to check.\n   * @return {boolean} True if the target element is a child of root.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._rootContainsTarget = function (target) {\n    return containsDeep(this.root || document, target);\n  };\n  /**\n   * Adds the instance to the global IntersectionObserver registry if it isn't\n   * already present.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._registerInstance = function () {\n    if (registry.indexOf(this) < 0) {\n      registry.push(this);\n    }\n  };\n  /**\n   * Removes the instance from the global IntersectionObserver registry.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._unregisterInstance = function () {\n    var index = registry.indexOf(this);\n    if (index != -1) registry.splice(index, 1);\n  };\n  /**\n   * Returns the result of the performance.now() method or null in browsers\n   * that don't support the API.\n   * @return {number} The elapsed time since the page was requested.\n   */\n\n\n  function now() {\n    return window.performance && performance.now && performance.now();\n  }\n  /**\n   * Throttles a function and delays its execution, so it's only called at most\n   * once within a given time period.\n   * @param {Function} fn The function to throttle.\n   * @param {number} timeout The amount of time that must pass before the\n   *     function can be called again.\n   * @return {Function} The throttled function.\n   */\n\n\n  function throttle(fn, timeout) {\n    var timer = null;\n    return function () {\n      if (!timer) {\n        timer = setTimeout(function () {\n          fn();\n          timer = null;\n        }, timeout);\n      }\n    };\n  }\n  /**\n   * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n   * @param {Node} node The DOM node to add the event handler to.\n   * @param {string} event The event name.\n   * @param {Function} fn The event handler to add.\n   * @param {boolean} opt_useCapture Optionally adds the even to the capture\n   *     phase. Note: this only works in modern browsers.\n   */\n\n\n  function addEvent(node, event, fn, opt_useCapture) {\n    if (typeof node.addEventListener == 'function') {\n      node.addEventListener(event, fn, opt_useCapture || false);\n    } else if (typeof node.attachEvent == 'function') {\n      node.attachEvent('on' + event, fn);\n    }\n  }\n  /**\n   * Removes a previously added event handler from a DOM node.\n   * @param {Node} node The DOM node to remove the event handler from.\n   * @param {string} event The event name.\n   * @param {Function} fn The event handler to remove.\n   * @param {boolean} opt_useCapture If the event handler was added with this\n   *     flag set to true, it should be set to true here in order to remove it.\n   */\n\n\n  function removeEvent(node, event, fn, opt_useCapture) {\n    if (typeof node.removeEventListener == 'function') {\n      node.removeEventListener(event, fn, opt_useCapture || false);\n    } else if (typeof node.detatchEvent == 'function') {\n      node.detatchEvent('on' + event, fn);\n    }\n  }\n  /**\n   * Returns the intersection between two rect objects.\n   * @param {Object} rect1 The first rect.\n   * @param {Object} rect2 The second rect.\n   * @return {?Object} The intersection rect or undefined if no intersection\n   *     is found.\n   */\n\n\n  function computeRectIntersection(rect1, rect2) {\n    var top = Math.max(rect1.top, rect2.top);\n    var bottom = Math.min(rect1.bottom, rect2.bottom);\n    var left = Math.max(rect1.left, rect2.left);\n    var right = Math.min(rect1.right, rect2.right);\n    var width = right - left;\n    var height = bottom - top;\n    return width >= 0 && height >= 0 && {\n      top: top,\n      bottom: bottom,\n      left: left,\n      right: right,\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Shims the native getBoundingClientRect for compatibility with older IE.\n   * @param {Element} el The element whose bounding rect to get.\n   * @return {Object} The (possibly shimmed) rect of the element.\n   */\n\n\n  function getBoundingClientRect(el) {\n    var rect;\n\n    try {\n      rect = el.getBoundingClientRect();\n    } catch (err) {// Ignore Windows 7 IE11 \"Unspecified error\"\n      // https://github.com/w3c/IntersectionObserver/pull/205\n    }\n\n    if (!rect) return getEmptyRect(); // Older IE\n\n    if (!(rect.width && rect.height)) {\n      rect = {\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom,\n        left: rect.left,\n        width: rect.right - rect.left,\n        height: rect.bottom - rect.top\n      };\n    }\n\n    return rect;\n  }\n  /**\n   * Returns an empty rect object. An empty rect is returned when an element\n   * is not in the DOM.\n   * @return {Object} The empty rect.\n   */\n\n\n  function getEmptyRect() {\n    return {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  /**\n   * Checks to see if a parent element contains a child element (including inside\n   * shadow DOM).\n   * @param {Node} parent The parent element.\n   * @param {Node} child The child element.\n   * @return {boolean} True if the parent node contains the child node.\n   */\n\n\n  function containsDeep(parent, child) {\n    var node = child;\n\n    while (node) {\n      if (node == parent) return true;\n      node = getParentNode(node);\n    }\n\n    return false;\n  }\n  /**\n   * Gets the parent node of an element or its host element if the parent node\n   * is a shadow root.\n   * @param {Node} node The node whose parent to get.\n   * @return {Node|null} The parent node or null if no parent exists.\n   */\n\n\n  function getParentNode(node) {\n    var parent = node.parentNode;\n\n    if (parent && parent.nodeType == 11 && parent.host) {\n      // If the parent is a shadow root, return the host element.\n      return parent.host;\n    }\n\n    if (parent && parent.assignedSlot) {\n      // If the parent is distributed in a <slot>, return the parent of a slot.\n      return parent.assignedSlot.parentNode;\n    }\n\n    return parent;\n  } // Exposes the constructors globally.\n\n\n  window.IntersectionObserver = IntersectionObserver;\n  window.IntersectionObserverEntry = IntersectionObserverEntry;\n})();","'use strict';\nvar toPropertyKey = require('../internals/to-property-key');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPropertyKey(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","var arraySlice = require('../internals/array-slice-simple');\n\nvar floor = Math.floor;\n\nvar mergeSort = function (array, comparefn) {\n  var length = array.length;\n  var middle = floor(length / 2);\n  return length < 8 ? insertionSort(array, comparefn) : merge(\n    array,\n    mergeSort(arraySlice(array, 0, middle), comparefn),\n    mergeSort(arraySlice(array, middle), comparefn),\n    comparefn\n  );\n};\n\nvar insertionSort = function (array, comparefn) {\n  var length = array.length;\n  var i = 1;\n  var element, j;\n\n  while (i < length) {\n    j = i;\n    element = array[i];\n    while (j && comparefn(array[j - 1], element) > 0) {\n      array[j] = array[--j];\n    }\n    if (j !== i++) array[j] = element;\n  } return array;\n};\n\nvar merge = function (array, left, right, comparefn) {\n  var llength = left.length;\n  var rlength = right.length;\n  var lindex = 0;\n  var rindex = 0;\n\n  while (lindex < llength || rindex < rlength) {\n    array[lindex + rindex] = (lindex < llength && rindex < rlength)\n      ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]\n      : lindex < llength ? left[lindex++] : right[rindex++];\n  } return array;\n};\n\nmodule.exports = mergeSort;\n"],"sourceRoot":""}